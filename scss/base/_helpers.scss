// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: $max-width; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  padding-left: 20px; /* 3 */
  padding-right: 20px; /* 3 */
  width: 100%; /* 1 */
 }

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

//PLACEHOLDER VARIABLES

%li {
  min-width: 3.5em;
  padding: 0.5em 0.5em;
  @include span-columns(1);
}

%button {
  height: 35px;
  border-radius: 50px;
  margin-bottom: 1em;
  font-size: 0.7em;

}

%tall{
  @include media(map-get($breakpoints, 'medium')) {
    height: 236px;
  }
  @include media(map-get($breakpoints, 'x-large')) {
    height: 310px;
  }
}

%article--picture {
  @include span-columns(12);
  img {
    float:left;
    padding: 0.2em 0.5em 0.2em 0.5em;
  }
  @include media(map-get($breakpoints, 'medium')) {
    @include span-columns(3);
    img {
      float: none;
      padding: 0.2em 0 0.5em 0;
    }
  }

}

%article{
  overflow: hidden;
  line-height: 1.01em;
  padding: 0 0.5em;
  background-color: #f6f6f6;
  margin-bottom: 0.8em;
  border-top: 1px solid #005689;
  font-size: 0.8em;
  a{
    color: $nav-blue;
  }
}

%article--featured {
  @extend %article;
  @extend %tall;
  @include span-columns(12);
  padding-bottom: 16px;
  img {
    margin: auto;
    width: 100%;
    @include media(map-get($breakpoints, 'medium')) {
      width: 380px;
      float: right;
      padding-left: 1em;
      padding-bottom: 22px;
    }
    @include media(map-get($breakpoints, 'large')) {
      width: 420px;
    }
    @include media(map-get($breakpoints, 'x-large')) {
      width: 500px;
    }
  }
  h5 {
    font-size: 1.35em;
    line-height: 1em;
  }
  @include media(map-get($breakpoints, 'medium')) {
    @include span-columns(9);
  }
  p {
    margin-top: 1em;
    color: #888;
    display: none;
    @include media(map-get($breakpoints, 'x-large')) {
      display: block;
    }
  }
}

%article--pink {
  background-color: #928;
  color: $text-white;
  a {
    color:#fdadba;
  }
  p{
    color: $text-white;
  }
}

%article--tall {
  @extend %article;
  @extend %article--picture;
  @extend %tall;
  @include media(map-get($breakpoints, 'medium')) {
    height: 236px;
  }
  @include media(map-get($breakpoints, 'x-large')) {
    height: 310px;
  }
  .article-wrapper{
    @include media(map-get($breakpoints, 'medium')) {
      max-width: 160px;
      margin: auto;
    }
    @include media(map-get($breakpoints, 'x-large')) {
      max-width: 220px;
      }
  }
}

%article--small {
  @include span-columns(12);
  padding: 0.2em 0.5em 0 1em;
  @extend %article;
  height: 55px;
  @include media(map-get($breakpoints, 'medium')) {
    height: 70px;
  }
  @include media(map-get($breakpoints, 'x-large')) {
    height: 95px;
  }
}
